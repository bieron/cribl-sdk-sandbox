/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type GetGroupsByIdRequest = {
  /**
   * Group id
   */
  id: string;
  /**
   * fields to add to results: git.commit, git.localChanges, git.log
   */
  fields?: string | undefined;
};

/**
 * a list of ConfigGroup objects
 */
export type GetGroupsByIdResponse = {
  /**
   * number of items present in the items array
   */
  count?: number | undefined;
  items?: Array<models.ConfigGroup> | undefined;
};

/** @internal */
export const GetGroupsByIdRequest$inboundSchema: z.ZodType<
  GetGroupsByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  fields: z.string().optional(),
});

/** @internal */
export type GetGroupsByIdRequest$Outbound = {
  id: string;
  fields?: string | undefined;
};

/** @internal */
export const GetGroupsByIdRequest$outboundSchema: z.ZodType<
  GetGroupsByIdRequest$Outbound,
  z.ZodTypeDef,
  GetGroupsByIdRequest
> = z.object({
  id: z.string(),
  fields: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGroupsByIdRequest$ {
  /** @deprecated use `GetGroupsByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetGroupsByIdRequest$inboundSchema;
  /** @deprecated use `GetGroupsByIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetGroupsByIdRequest$outboundSchema;
  /** @deprecated use `GetGroupsByIdRequest$Outbound` instead. */
  export type Outbound = GetGroupsByIdRequest$Outbound;
}

export function getGroupsByIdRequestToJSON(
  getGroupsByIdRequest: GetGroupsByIdRequest,
): string {
  return JSON.stringify(
    GetGroupsByIdRequest$outboundSchema.parse(getGroupsByIdRequest),
  );
}

export function getGroupsByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetGroupsByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGroupsByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGroupsByIdRequest' from JSON`,
  );
}

/** @internal */
export const GetGroupsByIdResponse$inboundSchema: z.ZodType<
  GetGroupsByIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int().optional(),
  items: z.array(models.ConfigGroup$inboundSchema).optional(),
});

/** @internal */
export type GetGroupsByIdResponse$Outbound = {
  count?: number | undefined;
  items?: Array<models.ConfigGroup$Outbound> | undefined;
};

/** @internal */
export const GetGroupsByIdResponse$outboundSchema: z.ZodType<
  GetGroupsByIdResponse$Outbound,
  z.ZodTypeDef,
  GetGroupsByIdResponse
> = z.object({
  count: z.number().int().optional(),
  items: z.array(models.ConfigGroup$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGroupsByIdResponse$ {
  /** @deprecated use `GetGroupsByIdResponse$inboundSchema` instead. */
  export const inboundSchema = GetGroupsByIdResponse$inboundSchema;
  /** @deprecated use `GetGroupsByIdResponse$outboundSchema` instead. */
  export const outboundSchema = GetGroupsByIdResponse$outboundSchema;
  /** @deprecated use `GetGroupsByIdResponse$Outbound` instead. */
  export type Outbound = GetGroupsByIdResponse$Outbound;
}

export function getGroupsByIdResponseToJSON(
  getGroupsByIdResponse: GetGroupsByIdResponse,
): string {
  return JSON.stringify(
    GetGroupsByIdResponse$outboundSchema.parse(getGroupsByIdResponse),
  );
}

export function getGroupsByIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetGroupsByIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGroupsByIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGroupsByIdResponse' from JSON`,
  );
}
