/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

/**
 * Cribl Product
 */
export const GetProductsGroupsAclTeamsByProductAndIdProduct = {
  Stream: "stream",
  Edge: "edge",
} as const;
/**
 * Cribl Product
 */
export type GetProductsGroupsAclTeamsByProductAndIdProduct = ClosedEnum<
  typeof GetProductsGroupsAclTeamsByProductAndIdProduct
>;

/**
 * resource type by which to filter access levels
 */
export const GetProductsGroupsAclTeamsByProductAndIdType = {
  Groups: "groups",
  Datasets: "datasets",
  DatasetProviders: "dataset-providers",
  Projects: "projects",
  Dashboards: "dashboards",
  Macros: "macros",
  Notebooks: "notebooks",
  Insights: "insights",
} as const;
/**
 * resource type by which to filter access levels
 */
export type GetProductsGroupsAclTeamsByProductAndIdType = ClosedEnum<
  typeof GetProductsGroupsAclTeamsByProductAndIdType
>;

export type GetProductsGroupsAclTeamsByProductAndIdRequest = {
  /**
   * Cribl Product
   */
  product: GetProductsGroupsAclTeamsByProductAndIdProduct;
  /**
   * Group ID
   */
  id: string;
  /**
   * resource type by which to filter access levels
   */
  type?: GetProductsGroupsAclTeamsByProductAndIdType | undefined;
};

/**
 * a list of TeamAccessControlList objects
 */
export type GetProductsGroupsAclTeamsByProductAndIdResponse = {
  /**
   * number of items present in the items array
   */
  count?: number | undefined;
  items?: Array<models.TeamAccessControlList> | undefined;
};

/** @internal */
export const GetProductsGroupsAclTeamsByProductAndIdProduct$inboundSchema:
  z.ZodNativeEnum<typeof GetProductsGroupsAclTeamsByProductAndIdProduct> = z
    .nativeEnum(GetProductsGroupsAclTeamsByProductAndIdProduct);

/** @internal */
export const GetProductsGroupsAclTeamsByProductAndIdProduct$outboundSchema:
  z.ZodNativeEnum<typeof GetProductsGroupsAclTeamsByProductAndIdProduct> =
    GetProductsGroupsAclTeamsByProductAndIdProduct$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProductsGroupsAclTeamsByProductAndIdProduct$ {
  /** @deprecated use `GetProductsGroupsAclTeamsByProductAndIdProduct$inboundSchema` instead. */
  export const inboundSchema =
    GetProductsGroupsAclTeamsByProductAndIdProduct$inboundSchema;
  /** @deprecated use `GetProductsGroupsAclTeamsByProductAndIdProduct$outboundSchema` instead. */
  export const outboundSchema =
    GetProductsGroupsAclTeamsByProductAndIdProduct$outboundSchema;
}

/** @internal */
export const GetProductsGroupsAclTeamsByProductAndIdType$inboundSchema:
  z.ZodNativeEnum<typeof GetProductsGroupsAclTeamsByProductAndIdType> = z
    .nativeEnum(GetProductsGroupsAclTeamsByProductAndIdType);

/** @internal */
export const GetProductsGroupsAclTeamsByProductAndIdType$outboundSchema:
  z.ZodNativeEnum<typeof GetProductsGroupsAclTeamsByProductAndIdType> =
    GetProductsGroupsAclTeamsByProductAndIdType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProductsGroupsAclTeamsByProductAndIdType$ {
  /** @deprecated use `GetProductsGroupsAclTeamsByProductAndIdType$inboundSchema` instead. */
  export const inboundSchema =
    GetProductsGroupsAclTeamsByProductAndIdType$inboundSchema;
  /** @deprecated use `GetProductsGroupsAclTeamsByProductAndIdType$outboundSchema` instead. */
  export const outboundSchema =
    GetProductsGroupsAclTeamsByProductAndIdType$outboundSchema;
}

/** @internal */
export const GetProductsGroupsAclTeamsByProductAndIdRequest$inboundSchema:
  z.ZodType<
    GetProductsGroupsAclTeamsByProductAndIdRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    product: GetProductsGroupsAclTeamsByProductAndIdProduct$inboundSchema,
    id: z.string(),
    type: GetProductsGroupsAclTeamsByProductAndIdType$inboundSchema.optional(),
  });

/** @internal */
export type GetProductsGroupsAclTeamsByProductAndIdRequest$Outbound = {
  product: string;
  id: string;
  type?: string | undefined;
};

/** @internal */
export const GetProductsGroupsAclTeamsByProductAndIdRequest$outboundSchema:
  z.ZodType<
    GetProductsGroupsAclTeamsByProductAndIdRequest$Outbound,
    z.ZodTypeDef,
    GetProductsGroupsAclTeamsByProductAndIdRequest
  > = z.object({
    product: GetProductsGroupsAclTeamsByProductAndIdProduct$outboundSchema,
    id: z.string(),
    type: GetProductsGroupsAclTeamsByProductAndIdType$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProductsGroupsAclTeamsByProductAndIdRequest$ {
  /** @deprecated use `GetProductsGroupsAclTeamsByProductAndIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetProductsGroupsAclTeamsByProductAndIdRequest$inboundSchema;
  /** @deprecated use `GetProductsGroupsAclTeamsByProductAndIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetProductsGroupsAclTeamsByProductAndIdRequest$outboundSchema;
  /** @deprecated use `GetProductsGroupsAclTeamsByProductAndIdRequest$Outbound` instead. */
  export type Outbound =
    GetProductsGroupsAclTeamsByProductAndIdRequest$Outbound;
}

export function getProductsGroupsAclTeamsByProductAndIdRequestToJSON(
  getProductsGroupsAclTeamsByProductAndIdRequest:
    GetProductsGroupsAclTeamsByProductAndIdRequest,
): string {
  return JSON.stringify(
    GetProductsGroupsAclTeamsByProductAndIdRequest$outboundSchema.parse(
      getProductsGroupsAclTeamsByProductAndIdRequest,
    ),
  );
}

export function getProductsGroupsAclTeamsByProductAndIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetProductsGroupsAclTeamsByProductAndIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProductsGroupsAclTeamsByProductAndIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProductsGroupsAclTeamsByProductAndIdRequest' from JSON`,
  );
}

/** @internal */
export const GetProductsGroupsAclTeamsByProductAndIdResponse$inboundSchema:
  z.ZodType<
    GetProductsGroupsAclTeamsByProductAndIdResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    count: z.number().int().optional(),
    items: z.array(models.TeamAccessControlList$inboundSchema).optional(),
  });

/** @internal */
export type GetProductsGroupsAclTeamsByProductAndIdResponse$Outbound = {
  count?: number | undefined;
  items?: Array<models.TeamAccessControlList$Outbound> | undefined;
};

/** @internal */
export const GetProductsGroupsAclTeamsByProductAndIdResponse$outboundSchema:
  z.ZodType<
    GetProductsGroupsAclTeamsByProductAndIdResponse$Outbound,
    z.ZodTypeDef,
    GetProductsGroupsAclTeamsByProductAndIdResponse
  > = z.object({
    count: z.number().int().optional(),
    items: z.array(models.TeamAccessControlList$outboundSchema).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProductsGroupsAclTeamsByProductAndIdResponse$ {
  /** @deprecated use `GetProductsGroupsAclTeamsByProductAndIdResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetProductsGroupsAclTeamsByProductAndIdResponse$inboundSchema;
  /** @deprecated use `GetProductsGroupsAclTeamsByProductAndIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetProductsGroupsAclTeamsByProductAndIdResponse$outboundSchema;
  /** @deprecated use `GetProductsGroupsAclTeamsByProductAndIdResponse$Outbound` instead. */
  export type Outbound =
    GetProductsGroupsAclTeamsByProductAndIdResponse$Outbound;
}

export function getProductsGroupsAclTeamsByProductAndIdResponseToJSON(
  getProductsGroupsAclTeamsByProductAndIdResponse:
    GetProductsGroupsAclTeamsByProductAndIdResponse,
): string {
  return JSON.stringify(
    GetProductsGroupsAclTeamsByProductAndIdResponse$outboundSchema.parse(
      getProductsGroupsAclTeamsByProductAndIdResponse,
    ),
  );
}

export function getProductsGroupsAclTeamsByProductAndIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetProductsGroupsAclTeamsByProductAndIdResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetProductsGroupsAclTeamsByProductAndIdResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetProductsGroupsAclTeamsByProductAndIdResponse' from JSON`,
  );
}
