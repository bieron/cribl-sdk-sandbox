/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type UpdateGroupsDeployByIdRequest = {
  /**
   * Group ID
   */
  id: string;
  /**
   * DeployRequest object
   */
  deployRequest: models.DeployRequest;
};

/**
 * a list of ConfigGroup objects
 */
export type UpdateGroupsDeployByIdResponse = {
  /**
   * number of items present in the items array
   */
  count?: number | undefined;
  items?: Array<models.ConfigGroup> | undefined;
};

/** @internal */
export const UpdateGroupsDeployByIdRequest$inboundSchema: z.ZodType<
  UpdateGroupsDeployByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  DeployRequest: models.DeployRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "DeployRequest": "deployRequest",
  });
});

/** @internal */
export type UpdateGroupsDeployByIdRequest$Outbound = {
  id: string;
  DeployRequest: models.DeployRequest$Outbound;
};

/** @internal */
export const UpdateGroupsDeployByIdRequest$outboundSchema: z.ZodType<
  UpdateGroupsDeployByIdRequest$Outbound,
  z.ZodTypeDef,
  UpdateGroupsDeployByIdRequest
> = z.object({
  id: z.string(),
  deployRequest: models.DeployRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    deployRequest: "DeployRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateGroupsDeployByIdRequest$ {
  /** @deprecated use `UpdateGroupsDeployByIdRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateGroupsDeployByIdRequest$inboundSchema;
  /** @deprecated use `UpdateGroupsDeployByIdRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateGroupsDeployByIdRequest$outboundSchema;
  /** @deprecated use `UpdateGroupsDeployByIdRequest$Outbound` instead. */
  export type Outbound = UpdateGroupsDeployByIdRequest$Outbound;
}

export function updateGroupsDeployByIdRequestToJSON(
  updateGroupsDeployByIdRequest: UpdateGroupsDeployByIdRequest,
): string {
  return JSON.stringify(
    UpdateGroupsDeployByIdRequest$outboundSchema.parse(
      updateGroupsDeployByIdRequest,
    ),
  );
}

export function updateGroupsDeployByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateGroupsDeployByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateGroupsDeployByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateGroupsDeployByIdRequest' from JSON`,
  );
}

/** @internal */
export const UpdateGroupsDeployByIdResponse$inboundSchema: z.ZodType<
  UpdateGroupsDeployByIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int().optional(),
  items: z.array(models.ConfigGroup$inboundSchema).optional(),
});

/** @internal */
export type UpdateGroupsDeployByIdResponse$Outbound = {
  count?: number | undefined;
  items?: Array<models.ConfigGroup$Outbound> | undefined;
};

/** @internal */
export const UpdateGroupsDeployByIdResponse$outboundSchema: z.ZodType<
  UpdateGroupsDeployByIdResponse$Outbound,
  z.ZodTypeDef,
  UpdateGroupsDeployByIdResponse
> = z.object({
  count: z.number().int().optional(),
  items: z.array(models.ConfigGroup$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateGroupsDeployByIdResponse$ {
  /** @deprecated use `UpdateGroupsDeployByIdResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateGroupsDeployByIdResponse$inboundSchema;
  /** @deprecated use `UpdateGroupsDeployByIdResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateGroupsDeployByIdResponse$outboundSchema;
  /** @deprecated use `UpdateGroupsDeployByIdResponse$Outbound` instead. */
  export type Outbound = UpdateGroupsDeployByIdResponse$Outbound;
}

export function updateGroupsDeployByIdResponseToJSON(
  updateGroupsDeployByIdResponse: UpdateGroupsDeployByIdResponse,
): string {
  return JSON.stringify(
    UpdateGroupsDeployByIdResponse$outboundSchema.parse(
      updateGroupsDeployByIdResponse,
    ),
  );
}

export function updateGroupsDeployByIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateGroupsDeployByIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateGroupsDeployByIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateGroupsDeployByIdResponse' from JSON`,
  );
}
