/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetGroupsConfigVersionByIdRequest = {
  /**
   * Group ID
   */
  id: string;
};

/**
 * a list of string objects
 */
export type GetGroupsConfigVersionByIdResponse = {
  /**
   * number of items present in the items array
   */
  count?: number | undefined;
  items?: Array<string> | undefined;
};

/** @internal */
export const GetGroupsConfigVersionByIdRequest$inboundSchema: z.ZodType<
  GetGroupsConfigVersionByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetGroupsConfigVersionByIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetGroupsConfigVersionByIdRequest$outboundSchema: z.ZodType<
  GetGroupsConfigVersionByIdRequest$Outbound,
  z.ZodTypeDef,
  GetGroupsConfigVersionByIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGroupsConfigVersionByIdRequest$ {
  /** @deprecated use `GetGroupsConfigVersionByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetGroupsConfigVersionByIdRequest$inboundSchema;
  /** @deprecated use `GetGroupsConfigVersionByIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetGroupsConfigVersionByIdRequest$outboundSchema;
  /** @deprecated use `GetGroupsConfigVersionByIdRequest$Outbound` instead. */
  export type Outbound = GetGroupsConfigVersionByIdRequest$Outbound;
}

export function getGroupsConfigVersionByIdRequestToJSON(
  getGroupsConfigVersionByIdRequest: GetGroupsConfigVersionByIdRequest,
): string {
  return JSON.stringify(
    GetGroupsConfigVersionByIdRequest$outboundSchema.parse(
      getGroupsConfigVersionByIdRequest,
    ),
  );
}

export function getGroupsConfigVersionByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetGroupsConfigVersionByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGroupsConfigVersionByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGroupsConfigVersionByIdRequest' from JSON`,
  );
}

/** @internal */
export const GetGroupsConfigVersionByIdResponse$inboundSchema: z.ZodType<
  GetGroupsConfigVersionByIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int().optional(),
  items: z.array(z.string()).optional(),
});

/** @internal */
export type GetGroupsConfigVersionByIdResponse$Outbound = {
  count?: number | undefined;
  items?: Array<string> | undefined;
};

/** @internal */
export const GetGroupsConfigVersionByIdResponse$outboundSchema: z.ZodType<
  GetGroupsConfigVersionByIdResponse$Outbound,
  z.ZodTypeDef,
  GetGroupsConfigVersionByIdResponse
> = z.object({
  count: z.number().int().optional(),
  items: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGroupsConfigVersionByIdResponse$ {
  /** @deprecated use `GetGroupsConfigVersionByIdResponse$inboundSchema` instead. */
  export const inboundSchema = GetGroupsConfigVersionByIdResponse$inboundSchema;
  /** @deprecated use `GetGroupsConfigVersionByIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetGroupsConfigVersionByIdResponse$outboundSchema;
  /** @deprecated use `GetGroupsConfigVersionByIdResponse$Outbound` instead. */
  export type Outbound = GetGroupsConfigVersionByIdResponse$Outbound;
}

export function getGroupsConfigVersionByIdResponseToJSON(
  getGroupsConfigVersionByIdResponse: GetGroupsConfigVersionByIdResponse,
): string {
  return JSON.stringify(
    GetGroupsConfigVersionByIdResponse$outboundSchema.parse(
      getGroupsConfigVersionByIdResponse,
    ),
  );
}

export function getGroupsConfigVersionByIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetGroupsConfigVersionByIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetGroupsConfigVersionByIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGroupsConfigVersionByIdResponse' from JSON`,
  );
}
