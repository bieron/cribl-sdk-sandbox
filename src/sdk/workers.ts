/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { workersGetSummaryWorkers } from "../funcs/workersGetSummaryWorkers.js";
import { workersGetWorkers } from "../funcs/workersGetWorkers.js";
import { workersUpdateWorkersRestart } from "../funcs/workersUpdateWorkersRestart.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Workers extends ClientSDK {
  /**
   * get worker and edge nodes count
   *
   * @remarks
   * get worker and edge nodes count
   */
  async getSummaryWorkers(
    request?: operations.GetSummaryWorkersRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.GetSummaryWorkersResponse> {
    return unwrapAsync(workersGetSummaryWorkers(
      this,
      request,
      options,
    ));
  }

  /**
   * get worker and edge nodes
   *
   * @remarks
   * get worker and edge nodes
   */
  async getWorkers(
    request?: operations.GetWorkersRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.GetWorkersResponse> {
    return unwrapAsync(workersGetWorkers(
      this,
      request,
      options,
    ));
  }

  /**
   * restarts worker nodes
   *
   * @remarks
   * restarts worker nodes
   */
  async updateWorkersRestart(
    options?: RequestOptions,
  ): Promise<operations.UpdateWorkersRestartResponse> {
    return unwrapAsync(workersUpdateWorkersRestart(
      this,
      options,
    ));
  }
}
