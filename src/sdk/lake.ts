/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { lakeCreateCriblLakeDatasetByLakeId } from "../funcs/lakeCreateCriblLakeDatasetByLakeId.js";
import { lakeGetCriblLakeDatasetByLakeId } from "../funcs/lakeGetCriblLakeDatasetByLakeId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Lake extends ClientSDK {
  /**
   * Create a Dataset in the specified Lake
   *
   * @remarks
   * Create a Dataset in the specified Lake
   */
  async createCriblLakeDatasetByLakeId(
    request: operations.CreateCriblLakeDatasetByLakeIdRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateCriblLakeDatasetByLakeIdResponse> {
    return unwrapAsync(lakeCreateCriblLakeDatasetByLakeId(
      this,
      request,
      options,
    ));
  }

  /**
   * Get the list of Dataset contained in the specified Lake
   *
   * @remarks
   * Get the list of Dataset contained in the specified Lake
   */
  async getCriblLakeDatasetByLakeId(
    request: operations.GetCriblLakeDatasetByLakeIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetCriblLakeDatasetByLakeIdResponse> {
    return unwrapAsync(lakeGetCriblLakeDatasetByLakeId(
      this,
      request,
      options,
    ));
  }
}
