/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { packsCreatePacks } from "../funcs/packsCreatePacks.js";
import { packsGetPacks } from "../funcs/packsGetPacks.js";
import { packsUpdatePacks } from "../funcs/packsUpdatePacks.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Packs extends ClientSDK {
  /**
   * Install Pack
   *
   * @remarks
   * Install Pack
   */
  async createPacks(
    request: models.PackRequestBody,
    options?: RequestOptions,
  ): Promise<operations.CreatePacksResponse> {
    return unwrapAsync(packsCreatePacks(
      this,
      request,
      options,
    ));
  }

  /**
   * Get info on packs
   *
   * @remarks
   * Get info on packs
   */
  async getPacks(
    request?: operations.GetPacksRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.GetPacksResponse> {
    return unwrapAsync(packsGetPacks(
      this,
      request,
      options,
    ));
  }

  /**
   * Upload Pack
   *
   * @remarks
   * Upload Pack
   */
  async updatePacks(
    request?: operations.UpdatePacksRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.UpdatePacksResponse> {
    return unwrapAsync(packsUpdatePacks(
      this,
      request,
      options,
    ));
  }
}
