/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { routesCreateRoutesAppendById } from "../funcs/routesCreateRoutesAppendById.js";
import { routesGetRoutesById } from "../funcs/routesGetRoutesById.js";
import { routesListRoutes } from "../funcs/routesListRoutes.js";
import { routesUpdateRoutesById } from "../funcs/routesUpdateRoutesById.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Routes extends ClientSDK {
  /**
   * Get a list of Routes objects
   *
   * @remarks
   * Get a list of Routes objects
   */
  async listRoutes(
    options?: RequestOptions,
  ): Promise<operations.ListRoutesResponse> {
    return unwrapAsync(routesListRoutes(
      this,
      options,
    ));
  }

  /**
   * Get Routes by ID
   *
   * @remarks
   * Get Routes by ID
   */
  async getRoutesById(
    request: operations.GetRoutesByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetRoutesByIdResponse> {
    return unwrapAsync(routesGetRoutesById(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Routes
   *
   * @remarks
   * Update Routes
   */
  async updateRoutesById(
    request: operations.UpdateRoutesByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateRoutesByIdResponse> {
    return unwrapAsync(routesUpdateRoutesById(
      this,
      request,
      options,
    ));
  }

  /**
   * Appends routes to the end of the routing table
   *
   * @remarks
   * Appends routes to the end of the routing table
   */
  async createRoutesAppendById(
    request: operations.CreateRoutesAppendByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateRoutesAppendByIdResponse> {
    return unwrapAsync(routesCreateRoutesAppendById(
      this,
      request,
      options,
    ));
  }
}
