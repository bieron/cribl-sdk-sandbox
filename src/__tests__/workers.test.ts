/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { CriblControlPlane } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Workers Get Summary Workers", async () => {
  const testHttpClient = createTestHTTPClient("getSummaryWorkers");

  const criblControlPlane = new CriblControlPlane({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      bearerAuth: process.env["CRIBLCONTROLPLANE_BEARER_AUTH"] ?? "value",
    },
  });

  const result = await criblControlPlane.workers.getSummaryWorkers();
  expect(result).toBeDefined();
  expect(result).toEqual({});
});

test("Workers Get Workers", async () => {
  const testHttpClient = createTestHTTPClient("getWorkers");

  const criblControlPlane = new CriblControlPlane({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      bearerAuth: process.env["CRIBLCONTROLPLANE_BEARER_AUTH"] ?? "value",
    },
  });

  const result = await criblControlPlane.workers.getWorkers();
  expect(result).toBeDefined();
  expect(result).toEqual({});
});

test("Workers Update Workers Restart", async () => {
  const testHttpClient = createTestHTTPClient("updateWorkersRestart");

  const criblControlPlane = new CriblControlPlane({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      bearerAuth: process.env["CRIBLCONTROLPLANE_BEARER_AUTH"] ?? "value",
    },
  });

  const result = await criblControlPlane.workers.updateWorkersRestart();
  expect(result).toBeDefined();
  expect(result).toEqual({});
});
