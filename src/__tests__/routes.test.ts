/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { CriblControlPlane } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Routes List Routes", async () => {
  const testHttpClient = createTestHTTPClient("listRoutes");

  const criblControlPlane = new CriblControlPlane({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      bearerAuth: process.env["CRIBLCONTROLPLANE_BEARER_AUTH"] ?? "value",
    },
  });

  const result = await criblControlPlane.routes.listRoutes();
  expect(result).toBeDefined();
  expect(result).toEqual({});
});

test("Routes Get Routes By Id", async () => {
  const testHttpClient = createTestHTTPClient("getRoutesById");

  const criblControlPlane = new CriblControlPlane({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      bearerAuth: process.env["CRIBLCONTROLPLANE_BEARER_AUTH"] ?? "value",
    },
  });

  const result = await criblControlPlane.routes.getRoutesById({
    id: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({});
});

test("Routes Update Routes By Id", async () => {
  const testHttpClient = createTestHTTPClient("updateRoutesById");

  const criblControlPlane = new CriblControlPlane({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      bearerAuth: process.env["CRIBLCONTROLPLANE_BEARER_AUTH"] ?? "value",
    },
  });

  const result = await criblControlPlane.routes.updateRoutesById({
    id: "<id>",
    routes: {
      routes: [],
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({});
});

test("Routes Create Routes Append By Id", async () => {
  const testHttpClient = createTestHTTPClient("createRoutesAppendById");

  const criblControlPlane = new CriblControlPlane({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      bearerAuth: process.env["CRIBLCONTROLPLANE_BEARER_AUTH"] ?? "value",
    },
  });

  const result = await criblControlPlane.routes.createRoutesAppendById({
    id: "<id>",
    requestBody: [],
  });
  expect(result).toBeDefined();
  expect(result).toEqual({});
});
