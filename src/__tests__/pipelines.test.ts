/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { CriblControlPlane } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Pipelines List Pipeline", async () => {
  const testHttpClient = createTestHTTPClient("listPipeline");

  const criblControlPlane = new CriblControlPlane({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      bearerAuth: process.env["CRIBLCONTROLPLANE_BEARER_AUTH"] ?? "value",
    },
  });

  const result = await criblControlPlane.pipelines.listPipeline();
  expect(result).toBeDefined();
  expect(result).toEqual({});
});

test("Pipelines Create Pipeline", async () => {
  const testHttpClient = createTestHTTPClient("createPipeline");

  const criblControlPlane = new CriblControlPlane({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      bearerAuth: process.env["CRIBLCONTROLPLANE_BEARER_AUTH"] ?? "value",
    },
  });

  const result = await criblControlPlane.pipelines.createPipeline({
    id: "<id>",
    conf: {},
  });
  expect(result).toBeDefined();
  expect(result).toEqual({});
});

test("Pipelines Get Pipeline By Id", async () => {
  const testHttpClient = createTestHTTPClient("getPipelineById");

  const criblControlPlane = new CriblControlPlane({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      bearerAuth: process.env["CRIBLCONTROLPLANE_BEARER_AUTH"] ?? "value",
    },
  });

  const result = await criblControlPlane.pipelines.getPipelineById({
    id: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({});
});

test("Pipelines Update Pipeline By Id", async () => {
  const testHttpClient = createTestHTTPClient("updatePipelineById");

  const criblControlPlane = new CriblControlPlane({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      bearerAuth: process.env["CRIBLCONTROLPLANE_BEARER_AUTH"] ?? "value",
    },
  });

  const result = await criblControlPlane.pipelines.updatePipelineById({
    id: "<id>",
    pipeline: {
      id: "<id>",
      conf: {},
    },
  });
  expect(result).toBeDefined();
  expect(result).toEqual({});
});

test("Pipelines Delete Pipeline By Id", async () => {
  const testHttpClient = createTestHTTPClient("deletePipelineById");

  const criblControlPlane = new CriblControlPlane({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    security: {
      bearerAuth: process.env["CRIBLCONTROLPLANE_BEARER_AUTH"] ?? "value",
    },
  });

  const result = await criblControlPlane.pipelines.deletePipelineById({
    id: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({});
});
